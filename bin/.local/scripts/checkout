#!/usr/bin/env bash

# branch from args
branch=$1

if [ -z "$branch" ]; then
    echo "Usage: $0 <branch-name>"
    exit 1
fi


git pull
git submodule update --init --recursive

submodules=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')

for submodule in $submodules; do
    echo "Checking out branch '$branch' in submodule '$submodule'..."
    if [ -d "$submodule" ]; then
        cd "$submodule" || exit
        if git ls-remote --heads origin "$branch" | grep -q "$branch"; then
            branch_exists_on_remote=1
        else
            branch_exists_on_remote=0
        fi

        if git rev-parse --verify "$branch" >/dev/null 2>&1; then
            branch_exists_local=1
        else
            branch_exists_local=0
        fi

        # debug
        echo "Branch exists on remote: $branch_exists_on_remote"
        echo "Branch exists locally: $branch_exists_local"

        if [[ "$branch_exists_on_remote" -eq 1 && "$branch_exists_local" -eq 0 ]]; then
            git checkout -b "$branch" origin/"$branch"
            git pull
        elif [[ "$branch_exists_on_remote" -eq 0 && "$branch_exists_local" -eq 1 ]]; then
            git checkout "$branch"
        elif [[ "$branch_exists_local" -eq 1 ]]; then
            git checkout "$branch"
        elif [[ "$branch_exists_local" -eq 0 ]]; then
            git checkout -b "$branch"
        else
            echo "Branch '$branch' does not exist in submodule '$submodule'."
        fi

        cd - || exit
    else
        echo "Submodule $submodule does not exist."
    fi
done

